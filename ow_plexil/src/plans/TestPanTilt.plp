// The Notices and Disclaimers for Ocean Worlds Autonomy Testbed for Exploration
// Research and Simulation can be found in README.md in the root directory of
// this repository.

// Simple plan to test Pan and Tilt functions

#include "plan-interface.h"

TestPanTilt: Sequence
{

    In Real PanDegrees;
    In Real TiltDegrees;
    InOut Integer Success;
    // NOTE: Action server uses 0.05 radians (2.865 degrees)
    Real tolerance = 0.4;
    Real current_pan, current_tilt;

    //output test number
    log_info("TEST: ", Success+1);

    LibraryCall PanTilt(PanDegrees = PanDegrees, TiltDegrees = TiltDegrees);
    current_pan  = Lookup(PanDegrees);
    current_tilt = Lookup(TiltDegrees);

    // TODO: simply much of the following, using library plans as needed

    // Normalize between -360 and 360
    if(abs(current_pan) > 360){
      if(current_pan < 0){
        current_pan = (abs(current_pan) % 360)*-1;
      }
      else{
        current_pan = (abs(current_pan) % 360);
      }
    }
    endif;

    if(abs(current_tilt) > 360){
      if(current_tilt < 0){
        current_tilt = (abs(current_tilt) % 360)*-1;
      }
      else{
        current_tilt = (abs(current_tilt) % 360);
      }
    }
    endif;

    // Check for equivalent angles

    if(current_pan > 0 && PanDegrees < 0){
      current_pan = current_pan - 360;
    }
    else if(current_pan < 0 && PanDegrees > 0){
      current_pan = current_pan + 360;
    }
    endif;

    if(current_tilt > 0 && TiltDegrees < 0){
      current_tilt = current_tilt - 360;
    }
    else if(current_tilt < 0 && TiltDegrees > 0){
      current_tilt = current_tilt + 360;
    }
    endif;

    // Check if resulting position is within tolerance

    if(abs(current_pan - PanDegrees) <= tolerance &&
       abs(current_tilt - TiltDegrees) <= tolerance) {
      log_info ("PanTilt SUCCEEDED",
                " PanDegrees: ", PanDegrees, " Actual: ", current_pan,
                " TiltDegrees: ", TiltDegrees, " Actual: ", current_tilt);
      Success = Success + 1;
    }
    else {
      log_error ("PanTilt FAILED",
                 " PanDegrees: ", PanDegrees, " Actual: ", current_pan,
                 " TiltDegrees: ", TiltDegrees, " Actual: ", current_tilt);
    }
}
