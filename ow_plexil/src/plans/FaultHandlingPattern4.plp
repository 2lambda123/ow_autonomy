// The Notices and Disclaimers for Ocean Worlds Autonomy Testbed for Exploration
// Research and Simulation can be found in README.md in the root directory of
// this repository.

// If no faults are occurring, this plan will pan 180 degrees, 
// and then unstow and stow the arm.
// If any fault is injected, the plan will pause and wait for resolution.
// If a fault is injected during an operation, that operation will only
// halt immediately if the fault injected is associated with it directly,
// i.e. an antenna fault during panning or an arm fault during 
// unstowing or stowing.
// Otherwise, the pausing will visually become apparent when the next
// operation does not begin due to it.

#include "plan-interface.h"

LibraryAction InitializeAntennaAndArm ();

FaultHandlingPattern4:
{

  Boolean PanDone = false;
  Boolean UnstowDone = false;
  Boolean StowDone = false;

  Real AngleToGoal;

  LibraryCall InitializeAntennaAndArm ();

  log_info ("Starting FaultHandlingPattern4 plan...");

  Mission: 
  {
    
    PanAntenna:
    {
      Repeat !PanDone;
      Start !Lookup(AntennaFault);
      Skip PanDone;

      LibraryCall Pan (Degrees=180);
      
      AngleToGoal = 180 - abs(Lookup(PanDegrees));

      if abs(AngleToGoal) < 1
      {
        PanDone = true;
      }

    }

    Unstow:
    {
      Repeat !UnstowDone;
      Start !Lookup(ArmFault);
      Skip UnstowDone;

      LibraryCall Unstow(); 
      
      UnstowDone = !Lookup(ArmFault);

    }

    
    Stow:
    {
      Repeat !StowDone;
      Start !Lookup(ArmFault);
      Skip StowDone;

      LibraryCall Stow();
      
      StowDone = !Lookup(ArmFault);
  
    }

  }

  log_info ("FaultHandlingPattern4 plan complete.");

}
