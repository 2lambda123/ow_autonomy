// The Notices and Disclaimers for Ocean Worlds Autonomy Testbed for Exploration
// Research and Simulation can be found in README.md in the root directory of
// this repository.

// If no faults are occurring, this plan will pan 180 degrees, 
// and then unstow and stow the arm.
// If any fault is injected, the plan will pause and wait for resolution.
// If a fault is injected during an operation, that operation will only
// halt immediately if the fault injected is associated with it directly,
// i.e. an antenna fault during panning or an arm fault during 
// unstowing or stowing.
// Otherwise, the pausing will visually become apparent when the next
// operation does not begin due to it.

#include "plan-interface.h"

LibraryAction InitializeAntennaAndArm ();

FaultHandlingPattern4:
{

  Boolean ImageDone = false;
  Boolean UnstowDone = false;
  Boolean StowDone = false;

  LibraryCall InitializeAntennaAndArm ();

  log_info ("Starting FaultHandlingPattern4 plan...");

  Mission: 
  {
    
    // This plan current will restart nodes if they are interrupted by a fault
    // and then that fault is resolved. This will continue until completion of
    // the processes in that node. However, currently the plan will continue
    // indefinitely on Image since there is no way to get the action state
    // in PLEXIL. This is what Jira 778 is for, so this plan can be tested
    // once that Jira has been resolved.

    Image:
    {
      Repeat !ImageDone;
      Start !Lookup(AntennaFault);
      Exit ImageDone;

      SynchronousCommand pan_antenna (90);

      ImageDone = !Lookup(AntennaFault); // Temporary solution
      log_info ("ImageDone: ", ImageDone);

    }
    
    /*
    Unstow:
    {
      Repeat !UnstowDone;
      Start !Lookup(ArmFault);
      Exit UnstowDone;

      SynchronousCommand unstow(); 
      
      ImageDone = !Lookup(ArmFault);

    }

    Stow:
    {
      Repeat !StowDone;
      Start !Lookup(ArmFault);
      Exit StowDone;

      SynchronousCommand stow();
      
      ImageDone = !Lookup(ArmFault);
  
    }
    */

  }

  log_info ("FaultHandlingPattern4 plan complete.");

}
