// The Notices and Disclaimers for Ocean Worlds Autonomy Testbed for Exploration
// Research and Simulation can be found in README.md in the root directory of
// this repository.

// Based on the FaultHandlingPattern2 plan. 
// Unstow and stow the arm repeatedly. Pan the antenna
// in 15 degree increments when 'Unstow' action goal status
// is 'ACTIVE' and pan the antenna in 15 degree decrements 
// when 'Stow' action goal status is 'ACTIVE'. 
// This plan must be terminated with an interrupt, e.g. Control-C.

#include "plan-interface.h"

FaultHandlingPattern2:
{
  Real NewAngle = 0;

  log_info ("Starting FaultHandlingPattern2 plan...");

  Run: Concurrence
  {
    Pattern2Image:
    {
      Repeat true;
      Start !Lookup(AntennaFault);

      if (Lookup(ActionGoalStatus("Stow")) == 1) {
        NewAngle = (Lookup(PanDegrees) - 15) mod 360;
      }
      if (Lookup(ActionGoalStatus("Unstow")) == 1) {
        NewAngle = (Lookup(PanDegrees) + 15) mod 360;
      }

      LibraryCall Pan (Degrees=NewAngle);
    }

    Pattern2UnstowStow:
    {
      Repeat true;
      Start !Lookup(ArmFault);
      Invariant !Lookup(ArmFault);

      LibraryCall Unstow();
      LibraryCall Stow();
    }
  }
}
