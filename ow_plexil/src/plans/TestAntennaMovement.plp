// The Notices and Disclaimers for Ocean Worlds Autonomy Testbed for Exploration
// Research and Simulation can be found in README.md in the root directory of
// this repository.

// Simple plan to test Pan and Tilt functions

#include "plan-interface.h"

LibraryAction TestPanTilt (In Real Goal, In Real Action,
                           InOut Integer Count, InOut Integer Wins);

TestAntennaMovement: CheckedSequence
{
  Integer Count = 0;
  Integer Wins = 0;

  // Initial location
  LibraryCall Tilt(Degrees = 0);
  LibraryCall Pan(Degrees = 0);

  // Pan tests
  LibraryCall TestPanTilt(Goal = 183.346, Action = "Pan", Count = Count, Wins = Wins);
  LibraryCall TestPanTilt(Goal = -183.346, Action = "Pan", Count = Count, Wins = Wins);
  LibraryCall TestPanTilt(Goal = 0, Action = "Pan", Count = Count, Wins = Wins);
  LibraryCall TestPanTilt(Goal = -45, Action = "Pan", Count = Count, Wins = Wins);
  LibraryCall TestPanTilt(Goal = 10, Action = "Pan", Count = Count, Wins = Wins);
  LibraryCall TestPanTilt(Goal = 0, Action = "Pan", Count = Count, Wins = Wins);

  // Tilt tests
  LibraryCall TestPanTilt(Goal = 10, Action = "Tilt", Count = Count, Wins = Wins);
  LibraryCall TestPanTilt(Goal = 20, Action = "Tilt", Count = Count, Wins = Wins);
  LibraryCall TestPanTilt(Goal = -10, Action = "Tilt", Count = Count, Wins = Wins);
  LibraryCall TestPanTilt(Goal = 89.38, Action = "Tilt", Count = Count, Wins = Wins);
  LibraryCall TestPanTilt(Goal = -89.38, Action = "Tilt", Count = Count, Wins = Wins);
  LibraryCall TestPanTilt(Goal = 45, Action = "Tilt", Count = Count, Wins = Wins);
  LibraryCall TestPanTilt(Goal = 0, Action = "Tilt", Count = Count, Wins = Wins);

  if (Wins == Count ) {
    log_info ("TestAntennaMovement: SUCCEEDED, ", Count, "/", Count,
              " tests passed");
  }
  else {
    log_error ("TestAntennaMovement: FAILED, ", Wins, "/", Count,
               " tests passed");
  }
  endif
}
