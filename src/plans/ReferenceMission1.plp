// The Notices and Disclaimers for Ocean Worlds Autonomy Testbed for Exploration
// Research and Simulation can be found in README.md in the root directory of
// this repository.

// Simplified version of the Europa reference mission, Sol 0.

#include "plan-interface.h"

LibraryAction MonitorPower (In Boolean continue);
LibraryAction ImageLandingSite(In String InstanceName,
                               In Boolean IgnoreCrash);
LibraryAction IdentifySampleTarget (InOut Real X,
                                    InOut Real Y,
                                    InOut Boolean Radial,
                                    InOut Real GroundPos);
LibraryAction DigTrench (In Real X,
                         In Real Y,
                         In Real GroundPos,
                         In Real Length,
                         In Real BiteDepth,
                         In Integer NumPasses,
                         In Boolean Radial);
LibraryAction RemoveTailings (In Real X,
                              In Real Y,
                              In Real GroundPos,
                              In Boolean Radial);
LibraryAction CollectSample (In Real X,
                             In Real Y,
                             In Real GroundPos,
                             In Real Depth,
                             In Real Length,
                             In Boolean Radial);
LibraryAction StartSampleAnalysis;

ReferenceMission1: Concurrence
{
  Boolean MissionInProgress = true;
  Boolean PowerStatus;

  PowerMonitor: LibraryCall MonitorPower (continue = MissionInProgress);

  Mission:
  {
    // These 4 variables are assigned in the call to IdentifySampleTarget.
    Real trench_x, trench_y, ground_pos;
    Boolean radial;

    Exit (NOT MissionInProgress);

    // Max length possible is twice the radius of the arm/scoop (.48), i.e. .96.
    // However, the max value is generally not appropriate because the scoop
    // should not be inserted so deep into the ground.  Here, estimating a
    // reasonable value given the other trenching parameters used.
    Real trench_length = 0.6;

    log_info ("Starting Reference Mission 1, Sol 0 ...");
    LibraryCall ImageLandingSite (InstanceName = "ReferenceMission1",
                                  IgnoreCrash = true);
    LibraryCall Unstow();
    LibraryCall IdentifySampleTarget (X = trench_x,
                                      Y = trench_y,
                                      GroundPos = ground_pos,
                                      Radial = radial);
    if (! Lookup(GroundFound)) MissionInProgress = false;
    LibraryCall DigTrench (X = trench_x, Y = trench_y, GroundPos = ground_pos,
                           Length = trench_length, BiteDepth = 0.05,
                           NumPasses = 2, Radial = radial);
    LibraryCall RemoveTailings (X = trench_x, Y = trench_y,
                                GroundPos = ground_pos, Radial = radial);
    LibraryCall CollectSample (X = trench_x, Y = trench_y,
                               GroundPos = ground_pos, Depth = 0.11,
                               Length = trench_length, Radial = radial);
    LibraryCall Stow();
    LibraryCall StartSampleAnalysis;
    Wait 2;  // Wait for (stubbed) sample analysis to finish.
    log_info ("Reference Mission 1, Sol 0 complete.");
    MissionInProgress = false;
  }
}
