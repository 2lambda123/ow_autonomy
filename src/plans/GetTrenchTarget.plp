// The Notices and Disclaimers for Ocean Worlds Autonomy Testbed for Exploration
// Research and Simulation can be found in README.md in the root directory of
// this repository.

Real Lookup time;

Command Flush();
Command SetCheckpoint(...);
Boolean Command DidCrash();
Integer Command CheckpointWhen(...);
Integer Command CheckpointInfo(...);
String Command ToString(...);
Integer Command StringToInteger(String);


Real Lookup TrenchTargetTimeout;
Boolean Lookup TrenchIdentified;

LibraryAction DownlinkImage();
LibraryAction Stub(In String desc);

LibraryAction HandleCrash(In String CheckpointName,
			  In String Args,
			  In Boolean IgnoreCrash,
			  InOut String Info);

Command log_error (...);

GetTrenchTarget:
{
  In Boolean IgnoreCrash;
  
  Real Time;
  Integer numAttempts = 0;
  
  Time = Lookup(time);

  CrashHandling:{
    String attempts_string = "";
    String empty_args = ""; // Plexil bug workaround
    LibraryCall HandleCrash(CheckpointName="GetTrenchTarget",
			    Args=empty_args,
			    IgnoreCrash=IgnoreCrash,
			    Info=attempts_string);
    // Override tilt if we were in middle of a panorama
    SetAttempts:{
      SkipCondition attempts_string == "" || !isKnown(attempts_string);
      SynchronousCommand numAttempts = StringToInteger(attempts_string);
    }
  }

  
  // TODO: invoke comms, reset on failure.
  LibraryCall DownlinkImage();

  Try {
    GetInfoFromGround:
    {
      RepeatCondition AttemptGround.outcome == FAILURE;
      InvariantCondition numAttempts <= 1;
      Time = Lookup(time);
      AttemptGround:
      {
        InvariantCondition
          Time < (AttemptGround.EXECUTING.START +
                  Lookup(TrenchTargetTimeout));
        EndCondition Lookup(TrenchIdentified);
        LibraryCall Stub(desc="Getting trench target from ground");
        numAttempts = numAttempts + 1;
      }
    }
    GetTrenchTargetOnboard:
    {
      LibraryCall Stub(desc="Getting trench target onboard");
    }
    log_error ("Failed to get trench target!");
  }
}
