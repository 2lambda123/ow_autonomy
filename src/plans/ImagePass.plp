Command pprint (...);

Command take_picture();
LibraryAction PanAndShoot (In Real PanAngle);

ImagePass:
{
  In Real PanLo, PanHi, PanIncrement;
  InOut Real PanAngle;
  InOut Boolean ReversePan;

  take_picture();

  if (ReversePan) {
    pprint ("---- Reverse pan. Pan =", PanAngle, "Lo=", PanLo,
            "Increment=", PanIncrement);
    while (PanAngle - PanIncrement > PanLo) {
      PanAngle = PanAngle - PanIncrement;
      LibraryCall PanAndShoot (PanAngle = PanAngle);
    }
    if (PanAngle > PanLo) {
      PanAngle = PanLo;
      LibraryCall PanAndShoot (PanAngle = PanAngle);
    }
    endif;
  }
  else {
    pprint ("---- Forward pan. Pan =", PanAngle, "Hi=", PanHi,
            "Increment=", PanIncrement);
    while (PanAngle + PanIncrement < PanHi) {
      PanAngle = PanAngle + PanIncrement;
      LibraryCall PanAndShoot (PanAngle = PanAngle);
    }
    if (PanAngle < PanHi) {
      PanAngle = PanHi;
      LibraryCall PanAndShoot (PanAngle = PanAngle);
    }
    endif;
  }
  endif;
  ReversePan = !ReversePan;
}
