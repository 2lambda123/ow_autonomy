// The Notices and Disclaimers for Ocean Worlds Autonomy Testbed for Exploration
// Research and Simulation can be found in README.md in the root directory of
// this repository.

// A test plan that detects joint overtorque.
// NOTE: runs indefinitely.  Autonomy node must be killed to terminate plan.

#include "plexil_defs.h"

Boolean Lookup HardTorqueLimitReached (String joint_name);
Boolean Lookup SoftTorqueLimitReached (String joint_name);
Boolean Lookup Running (String operation_name);
Boolean Lookup Finished (String operation_name);
Command publish_trajectory_demo();
Command guarded_move (Real target_x, Real target_y,
                      Real surf_norm_x, Real surf_norm_y, Real surf_norm_z,
                      Real offset_dist, Real overdrive_dist,
                      Boolean delete_prev_traj);
Command log_info (...);
Command log_warning (...);
Command log_error (...);

TorqueTest:
{
  Boolean Digging = true;
  String JointNames[NUM_JOINTS] = #("AntennaPan" "AntennaTilt" "DistalPitch"
                                    "HandYaw" "ProximalPitch" "ScoopYaw"
                                    "ShoulderPitch" "ShoulderYaw");

  log_info ("Beginning over-torque test...");
  DigAndMonitor: Concurrence
  {
    Dig:
    {
      // This node attempts to dig too deep (note -1 Z target), in an effort to
      // overtorque one or more arm joints.
      guarded_move (2, 0, 0, 0, 1, 0.2, 0.2, false);
      WaitForGuardedMove:
      {
        StartCondition Lookup (Running ("GuardedMove"));
        EndCondition Lookup (Finished ("GuardedMove"));
      }
      publish_trajectory_demo();
      WaitForPublish:
      {
        StartCondition Lookup (Running ("PublishTrajectory"));
        EndCondition Lookup (Finished ("PublishTrajectory"));
      }
      Digging = false;
    }

    MonitorTorque:
    {
      RepeatCondition Digging;
      for (Integer i = 0; i < NUM_JOINTS; i+1) {
        if (Lookup(HardTorqueLimitReached(JointNames[i]))) {
          log_error ("Joint ", JointNames[i], " exceeding its hard limit.");
        }
        elseif (Lookup(SoftTorqueLimitReached(JointNames[i]))) {
          log_warning ("Joint ", JointNames[i], " exceeding its soft limit.");
        }
        endif;
      }
      Wait 1;
    }
  }
  log_info ("Over-torque test finished.");
}
